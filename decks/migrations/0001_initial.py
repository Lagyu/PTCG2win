# Generated by Django 2.1.1 on 2018-09-14 07:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0002_auto_20180910_2303'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('text', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='AbilityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('name_j', models.CharField(default='みてい', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ArchType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Attack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('damage', models.CharField(max_length=20)),
                ('text', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='AttackCost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
                ('convertedEnergyCost', models.IntegerField(default=0)),
                ('grass', models.IntegerField(default=0)),
                ('fire', models.IntegerField(default=0)),
                ('water', models.IntegerField(default=0)),
                ('lightning', models.IntegerField(default=0)),
                ('fighting', models.IntegerField(default=0)),
                ('colorless', models.IntegerField(default=0)),
                ('darkness', models.IntegerField(default=0)),
                ('metal', models.IntegerField(default=0)),
                ('fairly', models.IntegerField(default=0)),
                ('free', models.IntegerField(default=0)),
                ('dragon', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('global_id_number', models.CharField(max_length=30)),
                ('id_in_expansion', models.CharField(max_length=10)),
                ('is_prism_star', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CardBundle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='CardName',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='CardText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('text', models.CharField(default='Comment text is not set.', max_length=10000)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.PTCG2winUser')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Deck',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('pub_date', models.DateTimeField()),
                ('mod_date', models.DateTimeField()),
                ('description', models.CharField(max_length=100000)),
                ('arch_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='decks.ArchType')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.PTCG2winUser')),
            ],
        ),
        migrations.CreateModel(
            name='DeckCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('text', models.CharField(default='Invalid deck code.', max_length=24)),
                ('ip', models.CharField(default='0.0.0.0', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='DeckList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deck_code', models.CharField(max_length=20)),
                ('created_date', models.DateTimeField()),
                ('parent_deck', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decks.Deck')),
            ],
        ),
        migrations.CreateModel(
            name='Expansion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('pub_date', models.DateField(null=True)),
                ('code', models.CharField(max_length=10)),
                ('logo_url', models.CharField(max_length=2000, null=True)),
                ('symbol_url', models.CharField(max_length=2000)),
                ('info_url', models.CharField(max_length=2000)),
                ('total_cards', models.IntegerField(null=True)),
                ('series', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PokemonRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('name_j', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='PokemonSpecies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('name_j', models.CharField(max_length=10)),
                ('pokedex_number', models.IntegerField()),
                ('evolves_from', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='decks.PokemonSpecies')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='decks.PokemonRegion')),
            ],
        ),
        migrations.CreateModel(
            name='Rarity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('name_j', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Regulation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('is_available', models.BooleanField(default=False)),
                ('expansions', models.ManyToManyField(to='decks.Expansion')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decks.Region')),
            ],
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='SubType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('name_j', models.CharField(default='みてい', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='SuperType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('name_j', models.CharField(default='みてい', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Title is not set.', max_length=150)),
                ('date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Weakness',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('value', models.CharField(max_length=10)),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decks.Type')),
            ],
        ),
        migrations.CreateModel(
            name='DeckTopic',
            fields=[
                ('topic_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='decks.Topic')),
            ],
            bases=('decks.topic',),
        ),
        migrations.CreateModel(
            name='Pokemon',
            fields=[
                ('card_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='decks.Card')),
                ('hp', models.IntegerField()),
                ('retreat_cost', models.IntegerField()),
                ('evolves_from', models.CharField(default=None, max_length=20, null=True)),
                ('evolution_list_str', models.CharField(max_length=200)),
                ('types', models.ManyToManyField(to='decks.Type')),
                ('weakness', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='decks.Weakness')),
            ],
            bases=('decks.card',),
        ),
        migrations.AddField(
            model_name='subtype',
            name='supertype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decks.SuperType'),
        ),
        migrations.AddField(
            model_name='expansion',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='decks.Region'),
        ),
        migrations.AddField(
            model_name='deck',
            name='regulation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='decks.Regulation'),
        ),
        migrations.AddField(
            model_name='country',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='decks.Region'),
        ),
        migrations.AddField(
            model_name='cardbundle',
            name='card',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='decks.Card'),
        ),
        migrations.AddField(
            model_name='cardbundle',
            name='parent_deck_list',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decks.DeckList'),
        ),
        migrations.AddField(
            model_name='card',
            name='artist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='decks.Artist'),
        ),
        migrations.AddField(
            model_name='card',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='decks.CardName'),
        ),
        migrations.AddField(
            model_name='card',
            name='rarity',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='decks.Rarity'),
        ),
        migrations.AddField(
            model_name='card',
            name='set',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='decks.Expansion'),
        ),
        migrations.AddField(
            model_name='card',
            name='subtype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='decks.SubType'),
        ),
        migrations.AddField(
            model_name='card',
            name='supertype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='decks.SuperType'),
        ),
        migrations.AddField(
            model_name='card',
            name='text',
            field=models.ManyToManyField(to='decks.CardText'),
        ),
        migrations.AddField(
            model_name='attack',
            name='card',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decks.Card'),
        ),
        migrations.AddField(
            model_name='attack',
            name='cost',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='decks.AttackCost'),
        ),
        migrations.AddField(
            model_name='archtype',
            name='regulation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='decks.Regulation'),
        ),
        migrations.AddField(
            model_name='ability',
            name='card',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decks.Card'),
        ),
        migrations.AddField(
            model_name='ability',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='decks.AbilityType'),
        ),
        migrations.AddField(
            model_name='decktopic',
            name='parent_deck',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='decks.Deck'),
        ),
    ]
